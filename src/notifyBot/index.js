import TelegramBot from "node-telegram-bot-api";
import config from "../../config.json" assert { type: 'json' };
import user from "../database/schemas/user.js";
import { bot as MainBot } from "../bot/index.js";

export default () => {
    const bot = new TelegramBot(config.notify_token, { polling: true });

    bot.on(`message`, async message => {
        if (message.text === '/start') {
            await user.findOneAndUpdate({ id: message.from.id }, { $set: { notify: true } });
            await bot.sendMessage(message.from.id, `*‚úÖ –û—Ç—Å—Ç—É–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω\n\nüí° –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å –æ—Ç—Å—Ç—É–∫ –≤–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop*`, {
                parse_mode: "Markdown",
                reply_markup: {
                    inline_keyboard: [[{
                        text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–∞–Ω–µ–ª—å',
                        url: `https://t.me/${(await MainBot.getMe()).username}`
                    }]]
                }
            })
        }
        if (message.text === '/stop') {
            await user.findOneAndUpdate({ id: message.from.id }, { $set: { notify: false } });
            await bot.sendMessage(message.from.id, `*‚ùå –û—Ç—Å—Ç—É–∫ –≤—ã–∫–ª—é—á–µ–Ω!
\n\nüí° –ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –æ—Ç—Å—Ç—É–∫ –≤–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start*`, {
                parse_mode: "Markdown",
                reply_markup: {
                    inline_keyboard: [[{
                        text: '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø–∞–Ω–µ–ª—å',
                        url: `https://t.me/${(await MainBot.getMe()).username}`
                    }]]
                }
            })
        }

    });
}