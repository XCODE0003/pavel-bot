import { bot } from "../../index.js";
import Database from "../../../database/index.js";
import Commission from "../../../database/schemas/commission.js";
import Log from "../../../database/schemas/log.js";
import { declineDays } from "../../../utils/index.js";
import config from '../../../../config.json' assert {type: 'json'};
import TelegramBot from "node-telegram-bot-api";

export default {
    name: "profile",

    async exec(query) {
        const [
            user,
            logsUser,
            commissionDoc,
            unexportedLogsCount,
            notifyBot
        ] = await Promise.all([
            Database.getUser(query.from.id),
            Database.getLogsSummary(query.from.id),
            Commission.findOne({}, { value: 1 }).lean(),
            Log.countDocuments({
                worker: query.from.id,
                exported: false,
                bot: { $ne: 'com' }
            }),
            new TelegramBot(config.notify_token, { polling: false }).getMe()
        ]);

        const registeredDays = Math.floor((Date.now() - user.reg) / (1000 * 60 * 60 * 24));
        const registered = declineDays(registeredDays);

        await bot.editMessageCaption(query, `*üíª –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç*

*üÜî –í–∞—à ID:* \`${query.from.id}\`
*üßæ –ö–æ–º–∏—Å—Å–∏—è:* \`–ö–∞–∂–¥—ã–π ${user.com || commissionDoc.value} –ª–æ–≥\`

>*üìä –ü–æ–ª—É—á–µ–Ω–æ –ª–æ–≥–æ–≤:* 
>–ó–∞ —Å–µ–≥–æ–¥–Ω—è: ${logsUser.d}
>–ó–∞ –º–µ—Å—è—Ü: ${logsUser.m}
>–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è: ${logsUser.all}


*üìÜ –í –∫–æ–º–∞–Ω–¥–µ:* \`${registered}\`
*üìÅ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π:* \`${unexportedLogsCount}\``, {
            parse_mode: 'MarkdownV2',
            message_id: query.message.message_id,
            chat_id: query.message.chat.id,
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: 'üì© –í—ã–≥—Ä—É–∑–∏—Ç—å',
                            callback_data: `export:${query.from.id}`
                        },
                        {
                            text: 'üîî –û—Ç—Å—Ç—É–∫',
                            url: `https://t.me/${notifyBot.username}`
                        }
                    ],
                    [
                        {
                            text: 'üìä –û—Ç—á–µ—Ç –¥–Ω—è üü¢',
                            callback_data: `export:${query.from.id}`
                        },

                    ],
                    [
                        {
                            text: 'üîô –ù–∞–∑–∞–¥',
                            callback_data: 'start'
                        }
                    ]
                ]
            }
        }, 'cdn/profile.png');
    }
}
