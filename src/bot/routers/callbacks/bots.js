import { bot } from "../../index.js";
import config from '../../../../config.json' assert { type: 'json' };
import Bot from "../../../database/schemas/bot.js";
import TelegramBot from "node-telegram-bot-api";
import states from "../../states.js";
import template from "../../../database/schemas/template.js";
import _ from 'lodash';

export default {
    name: "bots",
    async exec(query, [action]) {
        if(action) {
            const templates = await template.find({ owner: query.from.id });

            if(!templates.length) {
                return await bot.editMessageCaption(query, `*ü§ñ –£ –í–∞—Å 0 —à–∞–±–ª–æ–Ω–æ–≤ –±–æ—Ç–æ–≤. *`, {
                    parse_mode: 'Markdown',
                    chat_id: query.message.chat.id,
                    message_id: query.message.message_id,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: '‚ûï –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω',
                                    callback_data: 'templatesb:create'
                                }
                            ],
                            [
                                {
                                    text: 'üîô –ù–∞–∑–∞–¥',
                                    callback_data: 'bots'
                                }
                            ]
                        ]
                    }
                });
            }

            await bot.editMessageCaption(query, `<b>ü§ñ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞:</b>

<i>‚ùóÔ∏è–ù–µ –≤ –∫–æ–µ–º —Å–ª—É—á–∞–µ –Ω–µ –¥–µ–ª–∞–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–≤–æ–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ!</i>

1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @BotFather
2. –°–æ–∑–¥–∞–π—Ç–µ –±–æ—Ç–∞ /newbot –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ <code>/mybots</code> > <code>/revoke</code>
3. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —á–∞—Ç.

‚ùî –ü—Ä–∏–º–µ—Ä–Ω–æ —Ç–∞–∫ –≤—ã–≥–ª—è–¥–∏—Ç —Ç–æ–∫–µ–Ω:
<code>123456789:ABCdefGHIjklMNOpqrsTUVwxyz12345678</code>

‚ùï–ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª:
<code>123456789:ABCdefGHIjklMNOpqrsTUVwxyz12345678</code>
<code>987654321:ABCdefGHIjklMNOpqrsTUVwxyz87654321</code>

–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞:`, {
                parse_mode: 'HTML',
                chat_id: query.message.chat.id,
                message_id: query.message.message_id,
                reply_markup: {
                    inline_keyboard: [
                        [
                            {
                                text: 'üîô –ù–∞–∑–∞–¥',
                                callback_data: 'bots'
                            }
                        ]
                    ]
                }
            });
            return states.set(query.from.id, {
                action: 'bot',
                args: []
            });
        }
        const bots = await Bot.find({ owner: query.from.id });
     


        await bot.editMessageCaption(query, `*ü§ñ –í–∞—à–∏ –±–æ—Ç—ã –∏ —à–∞–±–ª–æ–Ω—ã*

üîÑ –í—Å–µ –±–æ—Ç—ã –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è –Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚ÑπÔ∏è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è`, {
            parse_mode: 'Markdown',
            message_id: query.message.message_id,
            chat_id: query.message.chat.id,
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: "üìÇ –®–∞–±–ª–æ–Ω—ã –±–æ—Ç–æ–≤",
                            callback_data: "templatesb"
                        }
                    ],
                    [
                        {
                            text: `‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞`,
                            callback_data: `bots:create`
                        }
                    ],
                    ..._.chunk(bots.map(t => {
                        return (
                            {
                                text: t.username,
                                callback_data: `bot:${t.id}`
                            }
                        )
                    }), 1),
                    [
                        {
                            text: "‚öôÔ∏è –î–æ–ø. –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                            callback_data: "addsettings"
                        },
                        {
                            text: 'üîô –ù–∞–∑–∞–¥',
                            callback_data: 'start'
                        }
                    ]
                ]
            }
        }, 'cdn/bots.png');
    }
}