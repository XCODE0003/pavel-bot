import { bot } from "../../index.js";
import template from "../../../database/schemas/domainTemplate.js";

export default {
    name: "ts",
    async exec(query, [id]) {
        const t = await template.findOne({ id });
        if(!t) return await bot.answerCallbackQuery(query.id, {
            text: "‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
        });

        await bot.editMessageCaption(query, `*üìÅ –®–∞–±–ª–æ–Ω:* \`${t.name}\`
*üíª –§–æ—Ä–º–∞—Ç:* \`${t.type === 'bot'? '–ë–æ—Ç' : '–ö–∞–Ω–∞–ª'}\`

–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å`, {
            parse_mode: "Markdown",
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: t.type === 'bot'? "Username" : `–ü–æ–¥–ø–∏—Å—á–∏–∫–∏`,
                            callback_data: `editt:${id}:desc`
                        }
                    ],
                    [
                        {
                            text: `–û–ø–∏—Å–∞–Ω–∏–µ`,
                            callback_data: `editt:${id}:bio`
                        }
                    ],
                    [
                        {
                            text: `–ê–≤–∞—Ç–∞—Ä–∫–∞`,
                            callback_data: `editt:${id}:image`
                        }
                    ],
                    [
                        {
                            text: 'üóë –£–¥–∞–ª–∏—Ç—å',
                            callback_data: `editt:${id}:delete`
                        },
                        {
                            text: 'üîô –ù–∞–∑–∞–¥',
                            callback_data: 'templatess'
                        }
                    ]
                ]
            },
            message_id: query.message.message_id,
            chat_id: query.message.chat.id
        }, 'cdn/templates.png')
    }
}