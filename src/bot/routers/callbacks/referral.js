import { bot } from "../../index.js";
import template from "../../../database/schemas/template.js";
import states from "../../states.js";
export default {
    name: "referral",
    async exec(query, [id, action]) {
        const t = await template.findOne({ id });
        if(!t) return await bot.answerCallbackQuery(query.id, {
            text: "‚ùå –®–∞–±–ª–æ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω"
        });

        let message = `<b>üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b>

<i>‚ùî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –º–æ–∂–µ—Ç –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –¥—Ä—É–∑–µ–π.</i>

<b>‚ùï–°–ø–µ—Ü.–º–µ—Ç–∫–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö:</b>
<code>$refdrygname</code> - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
<code>$refname</code> - –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è
<code>$refmax</code> - —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å
<code>$refskok</code> - —Å–∫–æ–ª—å–∫–æ –ª—é–¥–µ–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
<code>$link</code> - —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞`;

        let keyboard = query.message.reply_markup.inline_keyboard;
        if(action === 'referralToggle') {
            await template.findOneAndUpdate(
                { id: id },
                { $set: { referral_system_on: !t.referral_system_on } }
            );
            
            keyboard[0][0].text = `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ ${t.referral_system_on ? 'üü¢' : 'üî¥'}`;
            
            return await bot.editMessageCaption(query, message, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: keyboard
                }
            });
        }
        else if(action === 'referralJoinNotify') {
            states.set(query.from.id, { 
                action: 'editReferralJoinNotify', 
                args: [id]  
            });
            
            return await bot.sendMessage(query.from.id, `<b>üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –Ω–æ–≤–æ–º —Ä–µ—Ñ–µ—Ä–∞–ª–µ.</b>
                
<i>‚ùî –°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –ø–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –∫—Ç–æ-—Ç–æ –ø–µ—Ä–µ—à–µ–ª –ø–æ —Ä–µ—Ñ.—Å—Å—ã–ª–∫–µ.</i>
                
<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> ${t.referral_notify_join || '–ü—É—Å—Ç–æ'}
                
<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });

        }
        else if(action === 'referralAuthNotify') {
            states.set(query.from.id, { 
                action: 'editReferralAuthNotify', 
                args: [id]  
            });
            return await bot.sendMessage(query.from.id, `<b>üõé –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.</b>
                
<i>‚ùî–°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∫–æ–≥–¥–∞ —Ä–µ—Ñ–µ—Ä–∞–ª –ø—Ä–æ—à–µ–ª –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –≤ –±–æ—Ç–µ.</i>
                
<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> ${t.referral_notify_auth || '–ü—É—Å—Ç–æ'}
                
<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });
        }
        else if(action === 'editRefMessage') {
            states.set(query.from.id, { 
                action: 'editRefMessage', 
                args: [id]  
            });
            
            return await bot.sendMessage(query.from.id, `<b>üí¨ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.</b>
                
<i>‚ùî–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ —Å–æ–æ–±—â–µ–Ω–∏—è "–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"</i>
                
<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> ${t.referral_message || '–ü—É—Å—Ç–æ'}
                
<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });
        }
        else if(action === 'editCountFriend') {
            states.set(query.from.id, { 
                action: 'editCountFriend', 
                args: [id]  
            });
            return await bot.sendMessage(query.from.id, `<b>üë• –£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å –≤ –±–æ—Ç–∞.</b>

<i>‚ùî –°–æ–≤–µ—Ç—É–µ–º —É–∫–∞–∑–∞—Ç—å –¥–≤–æ–∏—Ö, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –¥–µ–ª–∞–ª —Å–ø–∞–º, –∞ –ø—Ä–∏–≥–ª–∞—Å–∏–ª —Å–≤–æ–∏—Ö –±–ª–∏–∑–∫–∏—Ö –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ.</i>
<i>‚ùóÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ü–∏—Ñ—Ä–∞–º–∏.</i>

<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> <code>${t.referral_count || 0}</code>

<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });
        }
        else if(action === 'referralWelcome') {
            states.set(query.from.id, { 
                action: 'editReferralWelcome', 
                args: [id]  
            });

            return await bot.sendMessage(query.from.id, `<b>üëãüèª –í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–µ—Ñ–µ—Ä–∞–ª–∞.</b>

<i>‚ùî –°–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç –≤–º–µ—Å—Ç–æ "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è" –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—à–µ–ª –ø–æ —Å—Å—ã–ª–∫–µ.</i>

<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> ${t.referral_welcome || '–ü—É—Å—Ç–æ'}

<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });
        }
        else if(action === 'referralGoal') {
            states.set(query.from.id, { 
                action: 'editReferralGoal', 
                args: [id]  
            });

            return await bot.sendMessage(query.from.id, `<b>‚≠êÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ü–µ–ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª–∞.</b>

<i>‚ùî –≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–∏–¥–µ—Ç –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏–≥–ª–∞—Å–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.</i>

<b>–ó–Ω–∞—á–µ–Ω–∏–µ —Å–µ–π—á–∞—Å:</b> ${t.referral_goal || '–ü—É—Å—Ç–æ'}

<b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:</b>`, {
                parse_mode: "HTML",
                reply_markup: {
                    inline_keyboard: [[
                        { text: 'üîô –ù–∞–∑–∞–¥', callback_data: `referral:${id}` }
                    ]]
                }
            });
        }


        await bot.editMessageCaption(query, message, {
            parse_mode: "HTML",
            reply_markup: {
                inline_keyboard: [
                    [
                        {
                            text: `–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ ${t.referral_system_on ? 'üü¢' : 'üî¥'}`,
                            callback_data: `referral:${id}:referralToggle`
                        }
                    ],
                    [
                        {
                            text: 'üí¨ –†–µ—Ñ.—Å–æ–æ–±—â–µ–Ω–∏–µ',
                            callback_data: `referral:${id}:editRefMessage`
                        }
                    ],
                    [
                        {
                            text: `üë• –°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å (${t.referral_count || 0})`,
                            callback_data: `referral:${id}:editCountFriend`
                        }
                    ],
                    [
                        {
                            text: `üîî –£–≤–µ–¥.–ø–µ—Ä–µ—Ö–æ–¥–∞ —Ä–µ—Ñ–∞`,
                            callback_data: `referral:${id}:referralJoinNotify`
                        }
                    ],
                    [
                        {
                            text: `üõé –£–≤–µ–¥.—É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑.—Ä–µ—Ñ–∞`,
                            callback_data: `referral:${id}:referralAuthNotify`
                        }
                    ],
                    [
                        {
                            text: 'üëãüèª –í—Å—Ç—É–ø.—Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ—Ñ–∞',
                            callback_data: `referral:${id}:referralWelcome`
                        }
                    ],
                    [
                        {
                            text: '‚≠êÔ∏è –¶–µ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Ä–µ—Ñ–∞',
                            callback_data: `referral:${id}:referralGoal`
                        }
                    ],
                    [
                        {
                            text: 'üîô –ù–∞–∑–∞–¥',
                            callback_data: `t:${id}`
                        }
                    ]
                ]
            },
            message_id: query.message.message_id,
            chat_id: query.message.chat.id
        }, 'cdn/templates.png')
    }
}