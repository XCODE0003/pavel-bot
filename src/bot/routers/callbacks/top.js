import { bot } from "../../index.js";
import Database from "../../../database/index.js";

export default {
    name: "top",
    async exec(query, [time, x]) {
        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
        const now = new Date();
        const midnight = new Date(now);
        midnight.setHours(24, 0, 0, 0);

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [user, topUsers] = await Promise.all([
            Database.getUser(query.from.id),
            Database.getTopUsers(time)
        ]);

        const timeLabels = {
            all: '–≤—Å–µ –≤—Ä–µ–º—è',
            m: '–º–µ—Å—è—Ü',
            day: '—Å—É—Ç–∫–∏'
        };

        const topUsersText = topUsers
            .map((u, i) => `${i + 1}. ${u.hiden || u.name === null ? `<b>ü•∑ –°–∫—Ä—ã—Ç</b>` : u.name} - ${u.logsCount}`)
            .join('\n');

        try {
            await bot.editMessageCaption(query,
                `<b>üèÜ –¢–æ–ø –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ ${timeLabels[time]}</b>\n\n${topUsersText}`,
                {
                    parse_mode: 'HTML',
                    message_id: query.message.message_id,
                    chat_id: query.message.chat.id,
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: `${time === 'all' ? '‚Ä¢ ' : ''}–ó–∞ –≤—Å–µ –≤—Ä–µ–º—è`,
                                    callback_data: 'top:all:true'
                                },
                                {
                                    text: `${time === 'm' ? '‚Ä¢ ' : ''}–ó–∞ –º–µ—Å—è—Ü`,
                                    callback_data: 'top:m:true'
                                },
                                {
                                    text: `${time === 'day' ? '‚Ä¢ ' : ''}–ó–∞ —Å—É—Ç–∫–∏`,
                                    callback_data: 'top:day:true'
                                }
                            ],
                            [{
                                text: user.hiden ? 'ü•∑ –í–∞—à –Ω–∏–∫ —Å–∫—Ä—ã—Ç' : '‚ö°Ô∏è –í–∞—à –Ω–∏–∫ –æ—Ç–∫—Ä—ã—Ç',
                                callback_data: `hideName:${!user.hiden}:${time}`
                            }],
                            [{
                                text: 'üîô –ù–∞–∑–∞–¥',
                                callback_data: 'start'
                            }]
                        ]
                    }
                },
                'cdn/top.png',
                x
            );
        } catch (error) {
            console.error('Error in editMessageCaption:', error);
        }
    }
}
